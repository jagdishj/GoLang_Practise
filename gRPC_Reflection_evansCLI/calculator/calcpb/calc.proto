syntax = "proto3";

package calc;
option go_package="calculator/calcpb";


message SumRequest{
    int32 first_number =1;
    int32 second_number = 2;
}

message SumResponse{
    int32 sum_result =1;
}

message PrimaNumberDecoRequest{
    int32 number=1;
}

message PrimeNumberDecoResponse{
    int32 prime_factor=1;
}

message ComputeAverageRequest{
     int32 number=1;
}

message ComputeAverageResponse{
    double average=1;
}

message FindMaximumRequest{
    int32 number=1;
}

message FindMaximumResponse{
    int32 maximum=1;
}

message SquareRootRequest{
    int32 number=1;
}

message SquareRootResponse{
    double number_root=1;
}

service CalcService{
    rpc Sum(SumRequest) returns (SumResponse) {};

    rpc PrimeNumberDecomposition(PrimaNumberDecoRequest) returns (stream PrimeNumberDecoResponse){};

    rpc ComputeAverage(stream ComputeAverageRequest) returns(ComputeAverageResponse) {};

    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    //error handling
    // this RPC will throw an exception if the sent number is negative
    // the error being send is of type INVALID_ARGUMENT
    rpc Squreroot(SquareRootRequest) returns(SquareRootResponse){};
}